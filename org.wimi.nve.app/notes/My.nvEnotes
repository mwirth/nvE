<?xml version="1.0" encoding="ASCII"?>
<notesmodel:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:notesmodel="http://notesmodel/1.0">
  <notes title="Markdown Tests" text="# Tests f&#xfc;r Markdown Syntax&#xA;&#xA;## Tabelle in html&#xA;&#xA;&lt;table>&#xA;    &lt;tr>&#xA;        &lt;td>Foo&lt;/td>        &lt;td>Foo&lt;/td>        &lt;td>Foo&lt;/td>&#xA;    &lt;/tr>&#xA;    &lt;tr>&#xA;        &lt;td>Foo&lt;/td>        &lt;td>Foo&lt;/td>&#xA;    &lt;/tr>&#xA;&#xA;&lt;/table>&#xA;&#xA;## Tabelle in Multimarkdown&#xA;&#xA;> wird leider nicht unterst&#xfc;tzt&#xA;&#xA;| Tables        | Are           | Cool  |&#xA;| ------------- |:-------------:| -----:|&#xA;| col 3 is      | right-aligned | $1600 |&#xA;| col 2 is      | centered      |   $12 |&#xA;| zebra stripes | are neat      |    $1 |&#xA;&#xA;## Sourcecode&#xA;&#xA;&#x9;hinter Tab wird mit Schrift Courier dargestellt&#xA;&#xA;## Formatierung&#xA;&#xA;*kursiv*  &#xA;_kursiv_  &#xA;**bold**  &#xA;***kursiv und bold***&#xA;&#xA;## Aufz&#xe4;hlung&#xA;&#xA;* erstens&#xA;* zweitens&#xA;* drittens  &#xA;    **blanase**, was ist denn eine blanase?&#xA;* viertens&#xA;&#xA;" lastCursorPos="595"/>
  <notes title="Mac Tipps" text="# Screenshots&#xA;&#xA;| CMD (Apfel)+Shift+3                                    |  Speichert den gesamten Bildschirm in einer Datei  &#xA;| CMD (Apfel)+ctrl+Shift+3                            |  Speichert den gesamten Bildschirm in der Zwischenablage  &#xA;| **CMD (Apfel)+Shift+4**                            |  **Speichert den gew&#xe4;hlten Bereich in einer Datei**  &#xA;| **CMD (Apfel)+ctrl+Shift+4**                    |  **Speichert den gew&#xe4;hlen Bereich in der Zwischenablage**  &#xA;| CMD (Apfel)+Shift+4, danach Leertaste        |  Speichert ein gew&#xe4;hltes Element und speichert dieses als Datei  &#xA;| CMD (Apfel)+ctrl+Shift+4, danach Leertaste |  Speichert ein gew&#xe4;hltes Element und speichert dieses in der Zwischenablage  &#xA;&#xA;&#xA;&lt;table>&#xA;&lt;thead>&#xA;&lt;tr>&#xA;&lt;th align=&quot;left&quot;>  &lt;/th>&#xA;&lt;th align=&quot;left&quot;>  &lt;/th>&#xA;&lt;/tr>&#xA;&lt;/thead>&#xA;&lt;tbody>&#xA;&lt;tr>&#xA;&lt;td align=&quot;left&quot;> CMD (Apfel)+Shift+3                                              &lt;/td>&#xA;&lt;td align=&quot;left&quot;>  Speichert den gesamten Bildschirm in einer Datei&lt;/td>&#xA;&lt;/tr>&#xA;&lt;tr>&#xA;&lt;td align=&quot;left&quot;> CMD (Apfel)+ctrl+Shift+3                                       &lt;/td>&#xA;&lt;td align=&quot;left&quot;>  Speichert den gesamten Bildschirm in der Zwischenablage&lt;/td>&#xA;&lt;/tr>&#xA;&lt;tr>&#xA;&lt;td align=&quot;left&quot;> &lt;strong>CMD (Apfel)+Shift+4&lt;/strong>                                        &lt;/td>&#xA;&lt;td align=&quot;left&quot;>  &lt;strong>Speichert den gew&#xe4;hlten Bereich in einer Datei&lt;/strong>&lt;/td>&#xA;&lt;/tr>&#xA;&lt;tr>&#xA;&lt;td align=&quot;left&quot;> &lt;strong>CMD (Apfel)+ctrl+Shift+4&lt;/strong>                                 &lt;/td>&#xA;&lt;td align=&quot;left&quot;>  &lt;strong>Speichert den gew&#xe4;hlen Bereich in der Zwischenablage&lt;/strong>&lt;/td>&#xA;&lt;/tr>&#xA;&lt;tr>&#xA;&lt;td align=&quot;left&quot;> CMD (Apfel)+Shift+4, danach Leertaste                &lt;/td>&#xA;&lt;td align=&quot;left&quot;>  Speichert ein gew&#xe4;hltes Element und speichert dieses als Datei&lt;/td>&#xA;&lt;/tr>&#xA;&lt;tr>&#xA;&lt;td align=&quot;left&quot;> CMD (Apfel)+ctrl+Shift+4, danach Leertaste         &lt;/td>&#xA;&lt;td align=&quot;left&quot;>  Speichert ein gew&#xe4;hltes Element und speichert dieses in der Zwischenablage&lt;/td>&#xA;&lt;/tr>&#xA;&lt;/tbody>&#xA;&lt;/table>&#xA;&#xA;&#xA;" lastCursorPos="702"/>
  <notes title="Wie funktioniert diese Programm" text="# Erk&#xe4;rung zu nvE&#xA;&#xA;nvE ist eine Nachimplementierung von nvAlt auf Eclipse Basis. nvAlt git es leider nu f&#xfc;r Mac OS X :-(&#xA;&#xA;" lastCursorPos="122"/>
  <notes title="ToDo's" text="## ToDo's for nvE&#xA;&#xA;1. _richtiger_ Editor einbauen. So dass die bekannten Shortcuts vom JavaEditor funktionieren&#xA;2. Einstellungen wie Aktualisierungszeitpunkt der Preview&#xA;3. Content Assist f&#xfc;r Markdown Syntax&#xA;4. Speicherort und Verschl&#xfc;sselung f&#xfc;r die Notizen&#xA;5. automtische Backups&#xA;6. Synchronisation mit Dropbox/iCloud und ggf. anderen&#xA;7. Startscreen, Icons, ...&#xA;8. css w&#xe4;hlbar/austauschbar&#xA;9. Code in mehrere Plugins aufspalten&#xA;10. Tabelle verbessern&#xA;11. in der Preview automatisch zur ge&#xe4;nderten Zeile scrollen wenn nicht sichtbar&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" lastCursorPos="453"/>
  <notes title="Bashscriptsammlung" text="## Hilfreiche Befehle f&#xfc;r die Bash&#xA;&#xA;**Verzeichnisgr&#xf6;&#xdf;e anzeigen**  &#xA;`du -sh /Pfad/ordner/`&#xA;&#xA;**sucht nach allen Dateien mit dem Namen test.txt unterhalb von /home**  &#xA;`-type f (file) --> nur nach Dateien suchen`  &#xA;```find /home -name &quot;test.txt&quot; -type f```&#xA;&#xA;**sucht nach allen Verzeichnissen mit dem Namen testdir unterhalb von /home**  &#xA;Die Option -type d (directory) bewirkt hier, dass nur nach Verzeichnissen gesucht wird.  &#xA;`find /home -name &quot;testdir&quot; -type d`&#xA;&#xA;**Dateien rekursiv kopieren**  &#xA;```find . -name &quot;*.txt&quot; -exec cp \{\} /tmp \;```&#xA;&#xA;**Dateien rekursiv z&#xe4;hlen**  &#xA;```find ./ -name *.java | wc -l```&#xA;&#xA;**Vorkommen eines Wortes in einer Datei z&#xe4;hlen**  &#xA;```grep -r -o wort file.txt | wc -w```&#xA;&#xA;**Datei suchen**  &#xA;```find / | grep &lt;dateiname>```&#xA;&#xA;**Text in Dateien suchen**&#xA;```grep -r &quot;STRING&quot; *```&#xA;&#xA;**belegte Ports des Benutzers anzeigen**  &#xA;```lsof -i -P | grep -i LISTEN```&#xA;&#xA;**belegte Ports aller Benutzer anzeigen**  &#xA;```sudo lsof -i -P | grep -i LISTEN```&#xA;&#xA;**Verzeichnisse rekursiv kopieren**  &#xA;```cp -rp quelle ziel```&#xA;&#xA;**Rechter rekursiv setzen**  &#xA;```chown -R &lt;user>:&lt;group> &lt;Verzeichnis>```&#xA;&#xA;**tar.gz packen von Verzeichnissen**  &#xA;```tar cfvz [ARCHIV].tar.gz &lt;Verzeichnis>```&#xA;&#xA;**Hash ermitteln**  &#xA;```md5sum &lt;file>```&#xA;&#xA;**Zeilenanzahl einer Datei ermitteln**  &#xA;```cat &lt;file> | wc -l```&#xA;&#xA;**Zeilenanzahl mehrerer Dateien ermitteln**  &#xA;```&#xA;for FILE in *; do&#xA; echo &quot;$FILE: $(cat $FILE | wc -l)&quot;&#xA;done&#xA;```&#xA;&#xA;**Plattenplatz**  &#xA;```df -h```&#xA;&#xA;**gibt bestimmte Zeile einer Datei aus**  &#xA;```sed -n '2429404p' &lt;Dateiname>```  &#xA;&#xA;**gibt Zeilen 1 bis 5 aus**  &#xA;```sed -ne '1,5p' /tmp/out```  &#xA;&#xA;**bestimmte Datei rekursiv l&#xf6;schen**&#xA;```find . -type f -name .DS_Store -exec rm {} \;```&#xA;&#xA;**bestimmte Zeile aus einer Datei l&#xf6;schen**  &#xA;```sed -i 2429404D omn_export_solr.csv```  &#xA;&#xA;**bestimme Zeichen in einer Datei ersetzen**  &#xA;```sed -e 's/vorher/nacher/g' -i &lt;Dateiname>```  &#xA;&#xA;**zerlegt die Datei big.csv in jeweils 100 Zeilen Einzeldateien namens small_csv.aaa, small_csv.aab, small_csv.aac usw.**  &#xA;```split -l 100 -a 3 &#xa0;big.csv &#xa0;small_csv.```  &#xA;```split -l 1000000 -a 3 omn_export_solr.csv omn_split_csv.```  &#xA;&#xA;&#xA;### Systemeigenschaften&#xA;&#xA;**Red Hat Version ermitteln**  &#xA;```cat /etc/issue```  &#xA;&#xA;**Kernel Version ermitteln**  &#xA;```uname -a```  &#xA;&#xA;**Speicher/CPU ermitteln**  &#xA;```cat /proc/meminfo```  &#xA;```top```  &#xA;```cat /proc/cpuinfo```  &#xA;&#xA;**Prozesse anzeigen**  &#xA;```ps axuwf```&#xA;&#xA;**Prozessauslastung**  &#xA;```top```&#xA;&#xA;&#xA;&#xA;&#xA;" lastCursorPos="430"/>
</notesmodel:Model>
